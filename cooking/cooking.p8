pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
function _init()

    


    players={}
    spawn_player()
    p1=players[1]



	stoves={}   
    spawn_stove(184,32)     



    particles={}    



    updatables={stoves,particles,players}
    drawables={particles, stoves, players}

end

function _update60()

for itemTable in all(updatables) do
    for item in all(itemTable) do
        item:update()
    end
end



camera(p1.x-64,p1.y-64)
end

function _draw()

cls()

make_bg()

map(0, 0, 0, 0, 100, 100)



for itemTable in all(drawables) do
    for item in all(itemTable) do
        item:draw()
    end
end


print(p1.x.."\n"..p1.y.."\n"..ceil(cos(time())+1),p1.x-30,p1.y-30, 7)
	

end

-->8

function spawn_stove(x,y)
add(stoves,
{
    sprite=41,
    x=x,
	   y=y,
    w=2,
    h=2,
    cooking=false,

    draw=function(self)
     spr(self.sprite, self.x, self.y, self.w, self.h)
    	oval( x+5, y+2, x+10, y+4, 5)
    	if (self.cooking) then
    		
    		ovalfill( x+5, y, x+10, y+3, 1)
    		line( x+2, y+2, x+4, y+2, 1)
            spawn_particles(self.x+8,self.y+1,0.5*(cos(time())),-7,3,1.2,0,1.4,5)  

            --Burger
            ovalfill( x+6, y, x+9, y+2, 4)
    		
    	end
    end,

    update=function(self)
        if (dist(p1,self)<10) then
            --insert alert here
            -- print("Press X to cook", p1.x-5, p1.y+10,5)
            if (btn(5)) self.cooking=true
        end

    end



}
)

end 

function spawn_player()
	add(players,{
	x=64,
	y=64,
    dirs={false,false,false,false},
    flipped=false,
    speed=0.5,
    blink=false,
    sprite=3,
 w=2,
 h=2,
	draw=function(self)
	 
     
     --walk
    if (count(self.dirs,true)>0) then 
        spr(self.sprite, self.x, self.y+((cos(4*time())-1)-.1), self.w, self.h, flipped)
    else 
        spr(self.sprite, self.x, self.y, self.w, self.h, flipped)
    end
     
     
     --blink
     if (self.blink) then 
        rectfill(self.x+5, self.y+7, self.x+9, self.y+8, 7)
        if (rnd()<0.01) self.blink=false 
    end
     if ((not blink) and (time()%20)==0 and rnd()<0.5) self.blink=true 
	end,
	update=function(self)
	  
	 if btn(0) then
	  self.dirs[1]=true
	  self.x-= 1*self.speed
      flipped=true
  else self.dirs[1]=false
	 end	 
  if btn(1) then 
   self.dirs[2]=true
   self.x+= 1*self.speed
   flipped=false
  else self.dirs[2]=false
  end
  
  if btn(2) then
   self.dirs[3]=true
   self.y-= 1*self.speed
  else self.dirs[3]=false
  end
  
  if btn(3) then
   self.dirs[4]=true
   self.y+= 1*self.speed
  else self.dirs[4]=false
  end
  
  self.turn=(atan2(self.vy,self.vx))
 end})
 
end


-->8
function make_bg()
	--floor
	rectfill(-100,-10,400,300,6)
	--sky
	rectfill(-100,-10,400,-100,1)
	
	
	
	--crater outside
	oval(-40,20,-10,30,5)
	
	--crater inside
	ovalfill(-40,18,-10,26,0)
	
		--crescent
	ovalfill(-39,23,-11,28,6)
	
	--lines
	line(-40,25,-42,30,5)
	line(-10,27,-8,31,5)
end


function dist(a,b)
return sqrt(((b.x-a.x)^2)+((b.y-a.y)^2))
end

function rspr(s,x,y,a,w,h)
 sw=(w or 1)*8
 sh=(h or 1)*8
 sx=(s%8)*8
 sy=flr(s/8)*8
 x0=flr(0.5*sw)
 y0=flr(0.5*sh)
 --a=a/360
 sa=sin(a)
 ca=cos(a)
 for ix=sw*-1,sw+4 do
  for iy=sh*-1,sh+4 do
   dx=ix-x0
   dy=iy-y0
   xx=flr(dx*ca-dy*sa+x0)
   yy=flr(dx*sa+dy*ca+y0)
   if (xx>=0 and xx<sw and yy>=0 and yy<=sh-1) then
    local col = sget(sx+xx,sy+yy)
    if col != 0 then
     pset(x+ix,y+iy,col)
    end
   end
  end
 end
end

function spawn_particles(_x,_y,_dx,_dy,_l,_s,_g,_p,_f)
    add(particles, {
        fade=_f,
     x=_x,
     y=_y,
     dx=_dx,
     dy=_dy,
     life=_l,
     orig_life=_l,
     rad=_s,
     p=_p,
        col=5, --set to color
     grav=_g,
     draw=function(self)
         --this function takes care
         --of drawing the particle
        
         --clear the palette
         pal()
         palt()
        
         --draw the particle
         circfill(self.x,self.y,self.rad,self.col)
     end,
     update=function(self)
         --this is the update function
        
         --move the particle based on
         --the speed
         self.x+=self.dx
         self.y+=self.dy
         --and gravity
         self.dy+=self.grav
        
         --reduce the radius
         --this is set to 90%, but
         --could be altered
         self.rad*=self.p
        
         --reduce the life
         self.life-=1
        
         --set the color
         if type(self.fade)=="table" then
             --assign color from fade
             --this code works out how
             --far through the lifespan
             --the particle is and then
             --selects the color from the
             --table
             self.col=self.fade[flr(#self.fade*(self.life/self.orig_life))+1]
            else
                --just use a fixed color
                self.col=self.fade            
         end
         
         --if the dust has exceeded
         --its lifespan, delete it
         --from the table
         if self.life<0 then
             del(particles,self)
        end
     end
 })
end

__gfx__
00000000030330300060600000000660600000000000000000000000000000000000000033331111777777776666666600000000000000000000000000000000
000000000033330000f0f00000006776760000000000000000000000006066600000000033331111777777776111011600000000000000000000000000000000
00700700009999000066770000006776760000000000000990000000006600600000000033331111777777776101710600000000000000000000000000000000
000770000990099000657500000067f6f60000000000009999000000006006600000000033331111777667776011101600000000000000000000000000000000
000770000999999000677700000067f6f60000000000aaaaaa0000000060060000000000dddd5555777667776110111600000000000000000000000000000000
007007000099990003533500000067777760000000000444444000000060060000000000dddd5555777777776111111600000000000000000000000000000000
000000000099990003555500000677777776000000444444444444000066660000000000dddd5555777777776555555600000000000000000000000000000000
000000000009900000100100006777577576000004ff44444444ff400000000000000000dddd5555777777776666666600000000000000000000000000000000
0000000000aaaa0000099900006777777776000004f440fff0444f40000000000000000044444444eeeeffff0000000000000000000000000000000000000000
000000000aa00aa0000999a0000667777776000000444f5f5f444400000000000000000044444444eeeeffff0000000000000000000000000000000000000000
00000000aa9999aa0f44444f000066777660000000004fffff440044000000000000000044444444eeeeffff0000000000000000000000000000000000000000
00000000a900009a00440f000000533333500000000004fff4400400000000000000000044444444eeeeffff0000000000000000000000000000000000000000
00000000a000000a0004fff000065555595700000000488888884400000000000000000044444444ffffeeee0000000000000000000000000000000000000000
00000000400000044488888000067d11116700000000488888224000000000000000000044444444ffffeeee0000000000000000000000000000000000000000
00000000000000000048880000000d10110000000000008888200000000000000000000044444444ffffeeee0000000000000000000000000000000000000000
00000000000000000004040000000660660000000000004404400000000000000000000044444444ffffeeee0000000000000000000000000000000000000000
00000000111111110003030000000000000000004444444400030033000000000000000066666666666666660000000000000000000000000000000000000000
00000000454445444a3334a000000000000000005545555503330300000000000000000067777777777777760000000000000000000000000000000000000000
00000000144114413a3333a300030000000000006556666530033000000000000000000067777777777777760000000000000000000000000000000000000000
00000000911991194a3334a000033300000000006666666600099000000000000000000067777777777777760000000000000000000000000000000000000000
0000000099999999334a333000333400000030006665556600999900003003000000000067777777777777760000000000000000000000000000000000000000
00000000aaaaaaaa333a3333343b343000bb30006656665600999900000330000000000067777777777777760000000000000000000000000000000000000000
000000009a99a999034a33300333bbb00bbb33006665556600099000000990000030030067777777777777760000000000000000000000000000000000000000
00000000aaaaaaaa3333033333b43b330b3bb3304466666600499400000990000003300066666666666666660000000000000000000000000000000000000000
00000000a9a99aa90000000000000000000000006666666500000000000000000000000066676676676676660000000000000000000000000000000000000000
00000000aaaaaaaa0000000000000000000000006666666600000000000000000000000066666666666666660000000000000000000000000000000000000000
00000000aaaaaaaa0000000000000000000000006556644600000000000000000000000066cccccccccccc660000000000000000000000000000000000000000
00000000aa99a9a90000000000000000000000006666666600000000000000000000000066cccccccccccc660000000000000000000000000000000000000000
00000000aaaaaaaa0000000000000000000000006665555600000000000000000000000066cccccccccccc660000000000000000000000000000000000000000
000000009aa9aa9a0000000000000000000000006656666500000000000000000000000066cccccccccccc660000000000000000000000000000000000000000
00000000aaaaaaaa0000000000000000000000004665555600000000000000000000000066666666666666660000000000000000000000000000000000000000
00000000111111110000000000000000000000006666666600000000000000000000000066666666666666660000000000000000000000000000000000000000
__map__
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0a0a0a0a0a0a0a0b0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090909090909090909090909090909090919190909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090909090909090909090909090909091919190909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090909090909090909090909090909191919090909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090909090909090909090909090919191909090909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090909090909090909090909090919190909090909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090909090909090909090909090909090909090909090909090909090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
